<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        al6EIodI1JQhCY6P/9k=
</value>
  </data>
</root>